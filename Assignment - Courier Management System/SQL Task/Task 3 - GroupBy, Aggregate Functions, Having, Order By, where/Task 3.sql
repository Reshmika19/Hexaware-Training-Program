-- Task 3 : GroupBy, Aggregate Functions, Having, Order By, where
USE CourierDB;

-- 14. Find the total number of couriers handled by each employee.
SELECT E.EmployeeID, E.Name, COUNT(C.CourierID) AS TotalCouriers
FROM Employee E
LEFT JOIN Courier C ON E.EmployeeID = C.EmployeeID
GROUP BY E.EmployeeID, E.Name
ORDER BY TotalCouriers DESC;


-- 15. Calculate the total revenue generated by each location
SELECT L.LocationID, L.LocationName, SUM(P.Amount) AS TotalRevenue
FROM Payment P
JOIN Location L ON P.LocationID = L.LocationID
GROUP BY L.LocationID, L.LocationName
ORDER BY TotalRevenue DESC;

-- 16. Find the total number of couriers delivered to each location.
SELECT ReceiverAddress AS Location, COUNT(CourierID) AS TotalCouriersDelivered
FROM Courier
WHERE Status = 'Delivered'
GROUP BY ReceiverAddress
ORDER BY TotalCouriersDelivered DESC;

-- 17. Find the courier with the highest average delivery time:
SELECT c.CourierID, 
       c.TrackingNumber, 
       AVG(ABS(DATEDIFF(c.DeliveryDate, p.PaymentDate))) AS AvgDeliveryTime
FROM Courier c
JOIN Payment p ON c.CourierID = p.CourierID
WHERE c.Status = 'Delivered'
GROUP BY c.CourierID, c.TrackingNumber
ORDER BY AvgDeliveryTime DESC
LIMIT 1;


-- 18. Find Locations with Total Payments Less Than a Certain Amount
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayments
FROM Location l
JOIN Payment p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName
HAVING SUM(p.Amount) < 500
ORDER BY TotalPayments ASC;


-- 19. Calculate Total Payments per Location
SELECT l.LocationID, l.LocationName, SUM(p.Amount) AS TotalPayments
FROM Location l
JOIN Payment p ON l.LocationID = p.LocationID
GROUP BY l.LocationID, l.LocationName
ORDER BY TotalPayments DESC;

-- 20. Retrieve couriers who have received payments totaling more than $1000 in a specific location (LocationID = X):
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayments
FROM Courier c
JOIN Payment p ON c.CourierID = p.CourierID
WHERE p.LocationID = 9
GROUP BY c.CourierID, c.SenderName, c.ReceiverName
HAVING SUM(p.Amount) > 1000
ORDER BY TotalPayments DESC;

select * from payment;


-- 21. Retrieve couriers who have received payments totaling more than $1000 after a certain date (PaymentDate > 'YYYY-MM-DD'):
SELECT c.CourierID, c.SenderName, c.ReceiverName, SUM(p.Amount) AS TotalPayments
FROM Courier c
JOIN Payment p ON c.CourierID = p.CourierID
WHERE p.PaymentDate > '2020-03-18'  
GROUP BY c.CourierID, c.SenderName, c.ReceiverName
HAVING SUM(p.Amount) > 1000
ORDER BY TotalPayments DESC;


-- 22. Retrieve locations where the total amount received is more than $5000 before a certain date (PaymentDate > 'YYYY-MM-DD')
SELECT LocationID, SUM(Amount) AS TotalAmount
FROM Payment
WHERE PaymentDate < '2025-03-21'
GROUP BY LocationID
HAVING SUM(Amount) > 5000;